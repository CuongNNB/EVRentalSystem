// Style Switcher for Login/Register Pages
// Allows switching between different background styles

export const STYLES = {
  SOFT_GRADIENT: 'soft-gradient',      // üåà Gradient m·ªÅm (hi·ªán ƒë·∫°i, startup style)
  FOCUS_GRADIENT: 'focus-style',       // ü™û Gradient v·ªõi √°nh s√°ng trung t√¢m
  ILLUSTRATION: 'illustration-style',  // üèôÔ∏è H√¨nh minh h·ªça nh·∫π
  PATTERN: 'pattern-style'              // üßä Pattern tinh t·∫ø
};

export function applyStyle(styleName) {
  // Remove all style classes
  const loginPage = document.querySelector('.login-page');
  const registerPage = document.querySelector('.register-page-layout');
  
  if (loginPage) {
    Object.values(STYLES).forEach(style => {
      loginPage.classList.remove(style);
    });
    
    if (styleName !== STYLES.SOFT_GRADIENT) {
      loginPage.classList.add(styleName);
    }
  }
  
  if (registerPage) {
    Object.values(STYLES).forEach(style => {
      registerPage.classList.remove(style);
    });
    
    if (styleName !== STYLES.SOFT_GRADIENT) {
      registerPage.classList.add(styleName);
    }
  }
  
  // Save preference
  localStorage.setItem('loginStyle', styleName);
}

export function getCurrentStyle() {
  return localStorage.getItem('loginStyle') || STYLES.SOFT_GRADIENT;
}

export function initializeStyle() {
  const currentStyle = getCurrentStyle();
  applyStyle(currentStyle);
}

// Style descriptions for UI
export const STYLE_DESCRIPTIONS = {
  [STYLES.SOFT_GRADIENT]: {
    name: 'Gradient M·ªÅm',
    description: 'M√†u xanh ng·ªçc ‚Äì t√≠m nh·∫°t ‚Äì tr·∫Øng m·ªù, ph·ªëi nh∆∞ nƒÉng l∆∞·ª£ng s·∫°ch',
    emoji: 'üåà',
    advantages: 'Tinh t·∫ø, chuy√™n nghi·ªáp, nh·∫π nh√†ng'
  },
  [STYLES.FOCUS_GRADIENT]: {
    name: '√Ånh S√°ng Trung T√¢m',
    description: 'T·∫°o ƒëi·ªÉm s√°ng quanh form ƒëƒÉng k√Ω',
    emoji: 'ü™û',
    advantages: 'Gi√∫p form "n·ªïi l√™n", d·ªÖ t·∫≠p trung'
  },
  [STYLES.ILLUSTRATION]: {
    name: 'H√¨nh Minh H·ªça',
    description: 'D√πng ·∫£nh EV v·ªõi opacity th·∫•p',
    emoji: 'üèôÔ∏è',
    advantages: 'Gi·ªØ th∆∞∆°ng hi·ªáu EV, t·∫°o chi·ªÅu s√¢u'
  },
  [STYLES.PATTERN]: {
    name: 'Pattern Tinh T·∫ø',
    description: 'D√πng texture ho·∫∑c SVG pattern m·ªù ·ªü g√≥c',
    emoji: 'üßä',
    advantages: 'Gi√∫p giao di·ªán c√≥ chi·ªÅu s√¢u m√† kh√¥ng r·ªëi'
  }
};
