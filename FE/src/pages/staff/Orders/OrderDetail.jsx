import React, { useState, useEffect } from "react";
import { useNavigate, useParams } from "react-router-dom";
import StaffSlideBar from "../../../components/staff/StaffSlideBar";
import StaffHeader from "../../../components/staff/StaffHeader";
import api from "../../../utils/api";
import "../StaffLayout.css";
import "./OrderDetail.css";

const ORDER_DETAILS = {
  EV0205010: {
    code: "EV0205010",
    renter: {
      name: "Nguy·ªÖn VƒÉn A",
      phone: "0909 042 421",
      email: "nguyenvana@gmail.com",
      verifyStatus: { label: "ƒê·ª£i x√°c minh", variant: "warning" },
      documents: [
        { label: "Gi·∫•y ph√©p l√°i xe", sides: ["M·∫∑t tr∆∞·ªõc", "M·∫∑t sau"] },
        { label: "CƒÉn c∆∞·ªõc c√¥ng d√¢n", sides: ["M·∫∑t tr∆∞·ªõc", "M·∫∑t sau"] },
      ],
    },
    order: {
      carName: "VinFast VF 3",
      plate: "59A-123456",
      chassis: "EV0205008",
      bookingTime: "12h00 29/09/2025 ‚Üí 12h00 30/09/2025",
      pickupStation: "Tr·∫°m SXX-002",
      rentStatus: { label: "Ch·ªù b√†n giao", variant: "info" },
      summary: {
        rentDuration: "2 ng√†y",
        rentFee: "1,600,000ƒë",
        extraFee: "1,200,000ƒë",
        total: "2,800,000ƒë",
      },
    },
    inspection: {
      vin: "5YJ3E1EA7JF000999",
      color: "X√°m x∆∞∆°ng r·ªìng",
      rentDate: "12h00 29/09/2025 ‚Üí 12h00 30/09/2025",
      mileage: "10,000km",
      fuel: "65%",
      exterior: [
        { label: "Tr∆∞·ªõc xe", image: "üöó" },
        { label: "Sau xe", image: "üöó" },
        { label: "M·∫∑t tr√°i", image: "üöó" },
        { label: "M·∫∑t ph·∫£i", image: "üöó" },
      ],
      notes: [
        { label: "T√¨nh tr·∫°ng ngo·∫°i th·∫•t", placeholder: "Ghi ch√∫ t√¨nh tr·∫°ng xe" },
        { label: "T√¨nh tr·∫°ng n·ªôi th·∫•t", placeholder: "Ghi ch√∫ t√¨nh tr·∫°ng xe" },
        { label: "T√¨nh tr·∫°ng ƒë·ªông c∆°", placeholder: "Ghi ch√∫ t√¨nh tr·∫°ng xe" },
      ],
    },
  },
};

const StatusBadge = ({ variant, children }) => (
  <span className={`order-detail__status order-detail__status--${variant}`}>
    {children}
  </span>
);

const OrderDetail = () => {
  const navigate = useNavigate();
  const { orderId } = useParams();
  const [isConfirmed, setConfirmed] = useState(false);
  
  // State cho d·ªØ li·ªáu t·ª´ API
  const [renterDetails, setRenterDetails] = useState(null);
  const [bookingDetails, setBookingDetails] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState("");

  // G·ªçi API khi component mount
  useEffect(() => {
    const fetchOrderDetails = async () => {
      if (!orderId) {
        setError("Kh√¥ng t√¨m th·∫•y m√£ ƒë∆°n h√†ng");
        setLoading(false);
        return;
      }

      try {
        setLoading(true);
        setError("");

        // G·ªçi song song 2 API
        const [renterResponse, bookingResponse] = await Promise.all([
          api.get(`/api/bookings/${orderId}/renter-details`, {
            params: { bookingId: orderId }
          }),
          api.get(`/api/bookings/${orderId}/booking-details`, {
            params: { bookingId: orderId }
          })
        ]);

        // L·∫•y d·ªØ li·ªáu t·ª´ response
        const renterData = renterResponse.data?.data || renterResponse.data;
        const bookingData = bookingResponse.data?.data || bookingResponse.data;

        setRenterDetails(renterData);
        setBookingDetails(bookingData);
      } catch (err) {
        console.error("Error fetching order details:", err);
        setError(
          err.response?.data?.message || 
          err.message || 
          "Kh√¥ng th·ªÉ t·∫£i th√¥ng tin ƒë∆°n h√†ng"
        );
      } finally {
        setLoading(false);
      }
    };

    fetchOrderDetails();
  }, [orderId]);

  // Helper functions ƒë·ªÉ format d·ªØ li·ªáu
  const formatCurrency = (value) => {
    if (!value && value !== 0) return "‚Äî";
    return new Intl.NumberFormat("vi-VN", {
      style: "currency",
      currency: "VND",
      maximumFractionDigits: 0,
    }).format(value);
  };

  const formatDateTime = (dateTime) => {
    if (!dateTime) return "‚Äî";
    const date = new Date(dateTime);
    return date.toLocaleString("vi-VN", {
      year: "numeric",
      month: "2-digit",
      day: "2-digit",
      hour: "2-digit",
      minute: "2-digit",
    });
  };

  const getStatusConfig = (status) => {
    const statusMap = {
      Pending_Deposit_Confirmation: { label: "Ch·ªù x√°c nh·∫≠n ƒë·∫∑t c·ªçc", variant: "warning" },
      Pending_Contract_Signing: { label: "Ch·ªù k√Ω h·ª£p ƒë·ªìng", variant: "warning" },
      Pending_Vehicle_Pickup: { label: "Ch·ªù nh·∫≠n xe", variant: "warning" },
      Vehicle_Inspected_Before_Pickup: { label: "ƒê√£ ki·ªÉm tra xe", variant: "info" },
      Currently_Renting: { label: "ƒêang thu√™", variant: "success" },
      Vehicle_Returned: { label: "ƒê√£ tr·∫£ xe", variant: "success" },
      Total_Fees_Charged: { label: "T√≠nh ph√≠ b·ªï sung", variant: "warning" },
      Completed: { label: "Ho√†n th√†nh", variant: "success" },
    };
    return statusMap[status] || { label: status, variant: "default" };
  };

  return (
    <div className="staff-shell staff-shell--orders">
      <StaffHeader />
      <div className="staff-layout staff-layout--orders">
        <StaffSlideBar activeKey="orders" />

        <main className="staff-main">
          <section className="order-detail">
            <header className="order-detail__top">
              <button
                type="button"
                className="order-detail__back"
                onClick={() => navigate(-1)}
              >
                ‚Üê Quay l·∫°i
              </button>
              <h1>
                Chi ti·∫øt ƒë∆°n h√†ng{" "}
                <span className="order-detail__code">#{orderId || "N/A"}</span>
              </h1>
            </header>

            {/* Loading State */}
            {loading && (
              <div style={{
                padding: "40px",
                textAlign: "center",
                backgroundColor: "#f0f9ff",
                borderRadius: "12px",
                margin: "20px 0",
              }}>
                <p style={{ fontSize: "16px", color: "#0369a1" }}>
                  ƒêang t·∫£i th√¥ng tin ƒë∆°n h√†ng...
                </p>
              </div>
            )}

            {/* Error State */}
            {error && !loading && (
              <div style={{
                padding: "20px",
                backgroundColor: "#fee2e2",
                border: "1px solid #fca5a5",
                borderRadius: "12px",
                margin: "20px 0",
                color: "#b91c1c",
              }}>
                <strong>L·ªói:</strong> {error}
              </div>
            )}

            {/* Content - ch·ªâ hi·ªÉn th·ªã khi c√≥ d·ªØ li·ªáu */}
            {!loading && !error && renterDetails && bookingDetails && (
              <>
                <div className="order-detail__grid">
            <section className="order-card">
              <header className="order-card__header">
                <h2>Th√¥ng tin ng∆∞·ªùi thu√™</h2>
                <StatusBadge variant="info">
                  ƒê√£ x√°c minh
                </StatusBadge>
              </header>

              <div className="order-card__body">
                <dl className="order-detail__info order-detail__info--columns">
                  <div>
                    <dt>H·ªç v√† t√™n</dt>
                    <dd>{renterDetails.fullName || "‚Äî"}</dd>
                  </div>
                  <div>
                    <dt>S·ªë ƒëi·ªán tho·∫°i</dt>
                    <dd>{renterDetails.phoneNumber || "‚Äî"}</dd>
                  </div>
                </dl>

                <div className="order-detail__email">
                  <dt>Email</dt>
                  <dd>{renterDetails.email || "‚Äî"}</dd>
                </div>

                <div className="order-detail__docs">
                  {/* Gi·∫•y ph√©p l√°i xe */}
                  {renterDetails.gplx && (
                    <div className="order-detail__doc-group">
                      <p>Gi·∫•y ph√©p l√°i xe</p>
                      <div className="order-detail__doc-sides">
                        <a
                          href={renterDetails.gplx}
                          target="_blank"
                          rel="noopener noreferrer"
                          className="order-detail__doc-btn"
                        >
                          Xem ·∫£nh
                        </a>
                      </div>
                    </div>
                  )}
                  
                  {/* CƒÉn c∆∞·ªõc c√¥ng d√¢n */}
                  {(renterDetails.frontCccd || renterDetails.backCccd) && (
                    <div className="order-detail__doc-group">
                      <p>CƒÉn c∆∞·ªõc c√¥ng d√¢n</p>
                      <div className="order-detail__doc-sides">
                        {renterDetails.frontCccd && (
                          <a
                            href={renterDetails.frontCccd}
                            target="_blank"
                            rel="noopener noreferrer"
                            className="order-detail__doc-btn"
                          >
                            M·∫∑t tr∆∞·ªõc
                          </a>
                        )}
                        {renterDetails.backCccd && (
                          <a
                            href={renterDetails.backCccd}
                            target="_blank"
                            rel="noopener noreferrer"
                            className="order-detail__doc-btn"
                          >
                            M·∫∑t sau
                          </a>
                        )}
                      </div>
                    </div>
                  )}
                </div>
              </div>

              <footer className="order-card__footer">
                <button
                  type="button"
                  className={`order-detail__confirm${
                    isConfirmed ? " order-detail__confirm--done" : ""
                  }`}
                  onClick={() => setConfirmed(true)}
                >
                  {isConfirmed ? "ƒê√£ x√°c nh·∫≠n" : "‚úì X√°c nh·∫≠n"}
                </button>
              </footer>
            </section>

            <section className="order-card order-card--highlight">
              <header className="order-card__header">
                <h2>Th√¥ng tin ƒë∆°n h√†ng</h2>
              </header>

              <div className="order-card__body order-card__body--split">
                <div className="order-detail__car-visual">üöó</div>
                <dl className="order-detail__info">
                  <div>
                    <dt>T√™n/M·∫´u xe</dt>
                    <dd>{bookingDetails.modelName || "‚Äî"}</dd>
                  </div>
                  <div>
                    <dt>Bi·ªÉn s·ªë xe</dt>
                    <dd>{bookingDetails.licensePlate || "‚Äî"}</dd>
                  </div>
                  <div>
                    <dt>M√£ ƒë∆°n thu√™ xe</dt>
                    <dd>{bookingDetails.bookingId || "‚Äî"}</dd>
                  </div>
                  <div>
                    <dt>Th·ªùi gian thu√™</dt>
                    <dd>
                      {formatDateTime(bookingDetails.startDate)} ‚Üí {formatDateTime(bookingDetails.endDate)}
                    </dd>
                  </div>
                  <div>
                    <dt>Tr·∫°m ƒë√≥n tr·∫£</dt>
                    <dd>{bookingDetails.stationName || "‚Äî"}</dd>
                  </div>
                  <div>
                    <dt>Tr·∫°ng th√°i thu√™</dt>
                    <dd>
                      <StatusBadge variant={getStatusConfig(bookingDetails.status).variant}>
                        {getStatusConfig(bookingDetails.status).label}
                      </StatusBadge>
                    </dd>
                  </div>
                </dl>
              </div>

              <footer className="order-card__footer order-detail__summary">
                <div>
                  <p>Th·ªùi gian thu√™</p>
                  <h3>{bookingDetails.rentingDurationDay} ng√†y</h3>
                </div>
                <div>
                  <p>Ph√≠ thu√™ xe</p>
                  <h3>{formatCurrency(bookingDetails.fee)}</h3>
                </div>
                <div>
                  <p>Ti·ªÅn c·ªçc</p>
                  <h3>{formatCurrency(bookingDetails.deposit)}</h3>
                </div>
                <div>
                  <p>Ph√≠ ph√°t sinh</p>
                  <h3>{formatCurrency(bookingDetails.additionalFee)}</h3>
                </div>
                <div className="order-detail__grand">
                  <p>T·ªïng c·ªông</p>
                  <h2>{formatCurrency(bookingDetails.totalAmount)}</h2>
                </div>
              </footer>
            </section>
          </div>

          <section className="order-card order-card--wide">
            <header className="order-card__header">
              <h2>T√¨nh tr·∫°ng xe tr∆∞·ªõc khi b√†n giao</h2>
            </header>

            <div className="order-card__body order-detail__inspection">
              <dl className="order-detail__info order-detail__info--grid">
                <div>
                  <dt>Bi·ªÉn s·ªë xe</dt>
                  <dd>{bookingDetails.licensePlate || "‚Äî"}</dd>
                </div>
                <div>
                  <dt>M√£ ƒë∆°n</dt>
                  <dd>{bookingDetails.bookingId || "‚Äî"}</dd>
                </div>
                <div>
                  <dt>Ng√†y b·∫Øt ƒë·∫ßu thu√™</dt>
                  <dd>{formatDateTime(bookingDetails.startDate)}</dd>
                </div>
                <div>
                  <dt>Ng√†y d·ª± ki·∫øn tr·∫£</dt>
                  <dd>{formatDateTime(bookingDetails.endDate)}</dd>
                </div>
                <div>
                  <dt>Th·ªùi gian thu√™</dt>
                  <dd>{bookingDetails.rentingDurationDay} ng√†y</dd>
                </div>
              </dl>

              <div className="order-detail__notes">
                <p style={{ 
                  padding: "16px", 
                  backgroundColor: "#f0f9ff", 
                  borderRadius: "8px",
                  color: "#0369a1",
                  textAlign: "center"
                }}>
                  Th√¥ng tin chi ti·∫øt v·ªÅ t√¨nh tr·∫°ng xe s·∫Ω ƒë∆∞·ª£c c·∫≠p nh·∫≠t khi ki·ªÉm tra xe.
                </p>
              </div>
            </div>
                </section>
              </>
            )}
          </section>
        </main>
      </div>
    </div>
  );
};

export default OrderDetail;
