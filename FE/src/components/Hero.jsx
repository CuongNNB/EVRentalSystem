import { useState } from "react";

const stats = [
  { value: "50+", label: "tr·∫°m thu√™ xe to√†n qu·ªëc" },
  { value: "200+", label: "xe ƒëi·ªán s·∫µn s√†ng" },
  { value: "10K+", label: "h√†nh tr√¨nh ƒë√£ ho√†n t·∫•t" },
  { value: "95%", label: "kh√°ch h√†ng h√†i l√≤ng" },
];

export default function Hero({ backgroundImage }) {
  const [isLoading, setIsLoading] = useState(false);

  const handleSubmit = async (e) => {
    e.preventDefault();
    setIsLoading(true);
    
    // Simulate API call
    setTimeout(() => {
      setIsLoading(false);
      alert("ƒê·∫∑t xe th√†nh c√¥ng! Ch√∫ng t√¥i s·∫Ω li√™n h·ªá v·ªõi b·∫°n s·ªõm nh·∫•t.");
    }, 2000);
  };
  return (
    <section className="hero-section" style={{ backgroundImage: `url(${backgroundImage})` }}>
      <div className="hero-overlay" />
      <div className="hero-inner">
        <div className="hero-copy">
          <h1>
            Thu√™ Xe ƒêi·ªán <span>L√°i T∆∞∆°ng Lai</span>
          </h1>
          <p>
            H·ªá th·ªëng tr·∫°m thu√™ xe ƒëi·ªán to√†n qu·ªëc v·ªõi 50+ ƒëi·ªÉm ph·ªß s√≥ng. 
            X√°c th·ª±c nhanh 5 ph√∫t, ƒë·∫∑t xe linh ho·∫°t, thanh to√°n ƒëa d·∫°ng. 
            Tr·∫£i nghi·ªám xe ƒëi·ªán th·∫ø h·ªá m·ªõi ngay h√¥m nay.
          </p>

          <div className="hero-rating">
            <div className="rating-stars">‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê</div>
            <div className="rating-text">
              <span className="rating-score">4.9/5</span>
              <span className="rating-label">ƒë√°nh gi√° t·ª´ 2,500+ kh√°ch h√†ng</span>
            </div>
          </div>

          <div className="hero-stats">
            {stats.map((stat) => (
              <div key={stat.value} className="stat">
                <strong>{stat.value}</strong>
                <span>{stat.label}</span>
              </div>
            ))}
          </div>

          <button type="button" className="btn primary-btn hero-cta">
            Xem danh s√°ch xe
          </button>
        </div>

        <div className="hero-card" role="form" aria-label="ƒê·∫∑t xe ngay">
          <div className="hero-card__header">
            <h3>ƒê·∫∑t xe ngay</h3>
            <p>Ch·ªçn ƒë·ªãa ƒëi·ªÉm v√† th·ªùi gian thu√™ xe ph√π h·ª£p</p>
          </div>
          <form className="booking-form" onSubmit={handleSubmit}>
            <label className="form-field">
              <span className="field-label">
                <span className="field-icon">üìç</span>
                ƒê·ªãa ƒëi·ªÉm nh·∫≠n xe
              </span>
              <select className="form-select" required>
                <option value="">Ch·ªçn tr·∫°m thu√™ xe</option>
                <option value="binh-thanh">EV Station - B√¨nh Th·∫°nh</option>
                <option value="thu-duc">EV Station - Th·ªß ƒê·ª©c</option>
                <option value="bien-hoa">EV Station - Bi√™n H√≤a</option>
                <option value="my-tho">EV Station - TP M·ªπ Tho</option>
                <option value="ben-tre">EV Station - TP B·∫øn Tre</option>
                <option value="tan-binh">EV Station - T√¢n B√¨nh</option>
                <option value="long-an">EV Station - Long An</option>
                <option value="can-tho">EV Station - C·∫ßn Th∆°</option>
                <option value="binh-duong">EV Station - B√¨nh D∆∞∆°ng</option>
                <option value="vung-tau">EV Station - V≈©ng T√†u</option>
              </select>
            </label>
            <label className="form-field">
              <span className="field-label">
                <span className="field-icon">‚è∞</span>
                Th·ªùi gian b·∫Øt ƒë·∫ßu
              </span>
              <input 
                type="datetime-local" 
                required 
                min={new Date().toISOString().slice(0, 16)}
                placeholder="Ch·ªçn ng√†y v√† gi·ªù b·∫Øt ƒë·∫ßu"
              />
            </label>
            <label className="form-field">
              <span className="field-label">
                <span className="field-icon">‚è∞</span>
                Th·ªùi gian k·∫øt th√∫c
              </span>
              <input 
                type="datetime-local" 
                required 
                min={new Date().toISOString().slice(0, 16)}
                placeholder="Ch·ªçn ng√†y v√† gi·ªù k·∫øt th√∫c"
              />
            </label>
            <button type="submit" className="btn primary-btn booking-submit" disabled={isLoading}>
              <span className="btn-text" style={{display: isLoading ? 'none' : 'block'}}>ƒê·∫∑t ngay</span>
              <span className="btn-loading" style={{display: isLoading ? 'flex' : 'none'}}>
                <span className="spinner"></span>
                ƒêang x·ª≠ l√Ω...
              </span>
            </button>
          </form>
        </div>
      </div>
    </section>
  );
}
